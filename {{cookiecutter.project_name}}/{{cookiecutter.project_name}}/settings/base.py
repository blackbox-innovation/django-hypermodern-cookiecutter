"""
Django settings for {{cookiecutter.project_name}} project.

Generated by 'django-admin startproject' using Django 3.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from datetime import timedelta

import environ
from django.utils.translation import gettext_lazy as _

env = environ.Env()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(os.path.join(__file__, os.pardir))))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY", default="foo")

# https://docs.djangoproject.com/en/dev/ref/settings/#debug
DEBUG = env.bool("DJANGO_DEBUG", False)

# APPS
# ------------------------------------------------------------------------------
DJANGO_APPS = [
    "whitenoise.runserver_nostatic",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.sites",
    "django.contrib.staticfiles",
    "baton",
    "django.contrib.admin",
    "django.contrib.humanize",
    "django.forms",
]
THIRD_PARTY_APPS = [
    "crispy_forms",
    "crispy_bootstrap5",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.linkedin_oauth2",
    "allauth.socialaccount.providers.google",
    "anymail",
    "{{cookiecutter.project_name}}.apps.applications.AxesConfig",
    "watchman",
    "baton.autodiscover",
    "django_celery_results",
    "rest_framework",
    "compressor",
    "django_select2",
    "django_htmx",
    "django_react_templatetags",
    "stdimage",
    "django_cleanup.apps.CleanupConfig",
]

LOCAL_APPS = [
    "{{cookiecutter.project_name}}.apps.core.apps.CoreConfig",
]
# https://docs.djangoproject.com/en/dev/ref/settings/#installed-apps
INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS

AUTHENTICATION_BACKENDS = [
    # AxesBackend should be the first backend in the AUTHENTICATION_BACKENDS list.
    "axes.backends.AxesBackend",
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    # AxesMiddleware should be the last middleware in the MIDDLEWARE list.
    # It only formats user lockout messages and renders Axes lockout responses
    # on failed user authentication attempts from login views.
    # If you do not want Axes to override the authentication response
    # you can skip installing the middleware and use your own views.
    "axes.middleware.AxesMiddleware",
    "django_htmx.middleware.HtmxMiddleware",
]

ROOT_URLCONF = "{{cookiecutter.project_name}}.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.template.context_processors.i18n",
                "django.template.context_processors.media",
                "django.template.context_processors.static",
                "django.template.context_processors.tz",
                "django.contrib.messages.context_processors.messages",
                "django_react_templatetags.context_processors.react_context_processor",
            ],
        },
    },
]

WSGI_APPLICATION = "{{cookiecutter.project_name}}.wsgi.application"


# DATABASES
# ------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/dev/ref/settings/#databases

DATABASES = {"default": env.db("DATABASE_URL", default="postgres:///{{cookiecutter.project_name}}_dev")}
DATABASES["default"]["ATOMIC_REQUESTS"] = True

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

TIME_ZONE = "Europe/Berlin"

USE_I18N = True

USE_L10N = True

USE_TZ = True


LANGUAGES = [
    ("de", _("German")),
    ("en", _("English")),
]

LANGUAGE_CODE = "de"

# https://docs.djangoproject.com/en/dev/ref/settings/#site-id
SITE_ID = 1


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = "/static/"

STATICFILES_DIRS = (os.path.join(BASE_DIR, "static"),)

STATICFILES_FINDERS = (
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "compressor.finders.CompressorFinder",
)

STATIC_ROOT = os.path.join(BASE_DIR, "static_root")

AUTH_USER_MODEL = "core.User"

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

LOCALE_PATHS = (os.path.join(BASE_DIR, "locale"),)

# Authentication

LOGIN_REDIRECT_URL = "/"

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_ALLOW_REGISTRATION = True
ACCOUNT_EMAIL_VERIFICATION = "optional"
ACCOUNT_AUTHENTICATION_METHOD = "email"
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_LOGOUT_ON_GET = True
ACCOUNT_PRESERVE_USERNAME_CASING = False
ACCOUNT_USER_DISPLAY = "{{cookiecutter.project_name}}.apps.core.utils.account_user_display"
ACCOUNT_LOGIN_ATTEMPTS_LIMIT = None
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = False
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USER_MODEL_USERNAME_FIELD = None

# FIXTURES
# ------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/dev/ref/settings/#fixture-dirs
FIXTURE_DIRS = (os.path.join(BASE_DIR, "fixtures"),)


# SECURITY
# ------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/dev/ref/settings/#session-cookie-httponly
SESSION_COOKIE_HTTPONLY = True
# https://docs.djangoproject.com/en/dev/ref/settings/#csrf-cookie-httponly
CSRF_COOKIE_HTTPONLY = True
# https://docs.djangoproject.com/en/dev/ref/settings/#secure-browser-xss-filter
SECURE_BROWSER_XSS_FILTER = True
# https://docs.djangoproject.com/en/dev/ref/settings/#x-frame-options
X_FRAME_OPTIONS = "DENY"
# https://docs.djangoproject.com/en/dev/ref/settings/#std:setting-SESSION_COOKIE_AGE
# 30 days
SESSION_COOKIE_AGE = 2592000  # 30 days

# Whitenoise enable caching and compression
STATICFILES_STORAGE = "whitenoise.storage.CompressedStaticFilesStorage"


# https://stackoverflow.com/questions/5401118/django-messages-being-displayed-twice
MESSAGE_STORAGE = "django.contrib.messages.storage.session.SessionStorage"

# https://docs.djangoproject.com/en/3.0/ref/settings/#std:setting-DATE_FORMAT
DATE_FORMAT = "j.N Y"

# Storage
DEFAULT_FILE_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"
AWS_DEFAULT_ACL = "private"
AWS_S3_ADDRESSING_STYLE = "virtual"
AWS_STORAGE_BUCKET_NAME = os.environ.get("S3_BUCKET", "")
AWS_ACCESS_KEY_ID = os.environ.get("AWS_ACCESS_KEY_ID", "")
AWS_SECRET_ACCESS_KEY = os.environ.get("AWS_SECRET_ACCESS_KEY", "")
AWS_DEFAULT_REGION = "eu-central-1"
AWS_S3_REGION_NAME = AWS_DEFAULT_REGION


# https://anymail.readthedocs.io/en/stable/installation/#installing-anymail
EMAIL_BACKEND = "anymail.backends.mailjet.EmailBackend"
ANYMAIL = {
    "MAILJET_API_KEY": os.environ.get("MAILJET_API_KEY", ""),
    "MAILJET_SECRET_KEY": os.environ.get("MAILJET_SECRET_KEY", ""),
}

DEFAULT_FROM_EMAIL = "no-reply@{{cookiecutter.project_name}}.io"
SERVER_EMAIL = "no-reply@{{cookiecutter.project_name}}.io"
ACCOUNT_ADAPTER = "{{cookiecutter.project_name}}.apps.core.account_adapter.AccountAdapter"
SOCIALACCOUNT_ADAPTER = "{{cookiecutter.project_name}}.apps.core.socialaccount_adapter.SocialaccountAdapter"

SEND_MAIL_COOL_DOWN_MINUTES = 15


# https://django-axes.readthedocs.io/en/latest/4_configuration.html#configuring-project-settings
AXES_META_PRECEDENCE_ORDER = [
    "HTTP_X_FORWARDED_FOR",
    "REMOTE_ADDR",
]
AXES_FAILURE_LIMIT = 15
AXES_COOLOFF_TIME = timedelta(minutes=30)


BATON = {
    "SITE_HEADER": "{{cookiecutter.project_name}}",
    "SITE_TITLE": "{{cookiecutter.project_name}}",
    "INDEX_TITLE": "Administration",
    "SUPPORT_HREF": "https://github.com/otto-torino/django-baton/issues",
    "COPYRIGHT": 'copyright Â© 2020 <a href="https://www.{{cookiecutter.project_name}}.io">{{cookiecutter.project_name}}</a>',  # noqa
    "POWERED_BY": '<a href="https://www.{{cookiecutter.project_name}}.io">{{cookiecutter.project_name}}</a>',
    "CONFIRM_UNSAVED_CHANGES": True,
    "SHOW_MULTIPART_UPLOADING": True,
    "ENABLE_IMAGES_PREVIEW": True,
    "CHANGELIST_FILTERS_IN_MODAL": True,
    "CHANGELIST_FILTERS_ALWAYS_OPEN": False,
    "CHANGELIST_FILTERS_FORM": False,
    "MENU_ALWAYS_COLLAPSED": False,
    "MENU_TITLE": "Menu",
    "MESSAGES_TOASTS": False,
    "GRAVATAR_DEFAULT_IMG": "identicon",
    "SEARCH_FIELD": {
        "label": "Suche...",
        "url": "/search/",
    },
}

DEFAULT_AUTO_FIELD = "django.db.models.AutoField"

# https://docs.celeryproject.org/en/latest/django/first-steps-with-django.html#django-celery-results-using-the-django-orm-cache-as-a-result-backend
CELERY_RESULT_BACKEND = "django-db"
CELERY_TIMEZONE = "Europe/Berlin"

ACCOUNT_MAX_EMAIL_ADDRESSES = 1
ACCOUNT_CONFIRM_EMAIL_ON_GET = True


# https://django-compressor.readthedocs.io/en/stable/settings.html
COMPRESS_PRECOMPILERS = (
    ("text/x-scss", "echo {infile} {outfile} >> /tmp/sass && sass {infile} {outfile}"),
    (
        "text/javascript",
        "./node_modules/.bin/esbuild --minify --bundle {infile} --outfile={outfile}",
    ),
)

COMPRESS_FILTERS = {
    "css": [
        "compressor.filters.template.TemplateFilter",
        "compressor.filters.css_default.CssAbsoluteFilter",
        "compressor.filters.cssmin.CSSMinFilter",
    ],
    "js": [],
}
COMPRESS_TEMPLATE_FILTER_CONTEXT = {
    "STATIC_URL": STATIC_URL,
}

# https://django-compressor.readthedocs.io/en/2.1/scenarios/
COMPRESS_OFFLINE = True
COMPRESS_ENABLED = True

# https://django-allauth.readthedocs.io/en/latest/forms.html

# https://stackoverflow.com/questions/44675550/django-widget-override-template/52184422#52184422
FORM_RENDERER = "django.forms.renderers.TemplatesSetting"

ACCOUNT_FORMS = {
    "login": "allauth.account.forms.LoginForm",
    "signup": "allauth.account.forms.SignupForm",
    "add_email": "allauth.account.forms.AddEmailForm",
    "change_password": "allauth.account.forms.ChangePasswordForm",
    "set_password": "allauth.account.forms.SetPasswordForm",
    "reset_password": "allauth.account.forms.ResetPasswordForm",
    "reset_password_from_key": "allauth.account.forms.ResetPasswordKeyForm",
    "disconnect": "allauth.socialaccount.forms.DisconnectForm",
}

SOCIALACCOUNT_FORMS = {
    "disconnect": "allauth.socialaccount.forms.DisconnectForm",
    "signup": "allauth.socialaccount.forms.SignupForm",
}
SOCIALACCOUNT_AUTO_SIGNUP = False
# Linkedin Authentication Setting

SOCIALACCOUNT_PROVIDERS = {
    "linkedin_oauth2": {
        "SCOPE": ["r_liteprofile", "r_emailaddress"],
        "PROFILE_FIELDS": [
            "id",
            "firstName",
            "lastName",
            "emailAddress",
            "profilePicture",
        ],
    }
}

SELECT2_THEME = "bootstrap-5"
SELECT2_JS = ""
SELECT2_CSS = ""


GOOGLE_API_KEY = os.environ.get("GOOGLE_API_KEY", default="foo")

MAX_IMAGE_SIZE = 5 * 1024 * 1024  # 5 MB
